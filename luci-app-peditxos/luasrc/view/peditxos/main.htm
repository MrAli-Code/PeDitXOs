<%# LuCI - Lua Configuration Interface v65 %>
<%+header%>
<style>
    :root {
        --peditx-primary: #00b5e2;
        --peditx-orange: #ffae42;
        --peditx-dark-bg: #2d2d2d;
        --peditx-card-bg: #3a3a3a;
        --peditx-border: #444;
        --peditx-text-color: #f0f0f0;
        --peditx-hover-bg: #454545;
        --peditx-focus-ring: #008eb2;
        --peditx-red: #e74c3c;
        --peditx-red-hover: #c0392b;
        --peditx-pink: #ff79c6;
        --peditx-pink-hover: #ff55b3;
    }
    body { color: var(--peditx-text-color); }
    
    .peditx-tabs { display: flex; border-bottom: 1px solid var(--peditx-border); margin-bottom: 20px; flex-wrap: wrap; }
    .peditx-tab-link { background-color: var(--peditx-card-bg); border: none; border-bottom: 3px solid transparent; outline: none; cursor: pointer; padding: 14px 20px; transition: color 0.3s, background-color 0.3s, border-color 0.3s; font-size: 16px; font-weight: 500; color: #bbb; margin-right: 5px; margin-bottom: -1px; border-top-left-radius: 8px; border-top-right-radius: 8px; }
    .peditx-tab-link:hover { color: var(--peditx-text-color); background-color: var(--peditx-hover-bg); }
    .peditx-tab-link.active { color: #1a1a1a; background: linear-gradient(135deg, #ffae42, #ff8c00); border-bottom: 3px solid transparent; font-weight: 700; }
    .peditx-tab-content { display: none; padding: 6px 12px; border-top: none; }

    .action-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); gap: 15px; }
    .action-item { background: var(--peditx-card-bg); padding: 15px; border-radius: 8px; display: flex; align-items: center; cursor: pointer; border: 1px solid var(--peditx-border); transition: transform 0.2s, box-shadow 0.2s, background 0.2s; }
    .action-item:hover { transform: translateY(-3px); box-shadow: 0 4px 10px rgba(0,0,0,0.3); background: var(--peditx-hover-bg); }
    .action-item input[type="radio"], .pkg-item input[type="checkbox"] { margin-right: 15px; transform: scale(1.2); cursor: pointer; }
    .action-item input[type="radio"]:checked + label { color: var(--peditx-orange); font-weight: bold; }
    .action-item label, .pkg-item label { cursor: pointer; width: 100%; }
    .execute-bar { margin-top: 25px; text-align: center; display: flex; justify-content: center; gap: 20px; }

    @keyframes pulse { 0% { transform: scale(1); box-shadow: 0 0 0 0 rgba(255, 140, 0, 0.7), 0 4px 15px rgba(0,0,0,0.3); } 70% { transform: scale(1.02); box-shadow: 0 0 0 10px rgba(255, 140, 0, 0), 0 6px 25px rgba(0,0,0,0.4); } 100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(255, 140, 0, 0), 0 4px 15px rgba(0,0,0,0.3); } }

    .peditx-main-button { font-size: 18px; padding: 16px 45px; color: #1a1a1a; font-weight: bold; border: none; border-radius: 50px; box-shadow: 0 4px 15px rgba(0,0,0,0.3); transition: background 0.3s ease, transform 0.2s ease; cursor: pointer; display: inline-flex; align-items: center; justify-content: center; text-shadow: 0 1px 1px rgba(255,255,255,0.2); }
    #execute-button { background: linear-gradient(135deg, var(--peditx-orange), #ff8c00); animation: pulse 2.5s infinite; }
    #execute-button:hover { background: linear-gradient(135deg, #ff8c00, #e87a00); animation-play-state: paused; }
    #execute-button:disabled { background: #555; cursor: not-allowed; box-shadow: none; transform: none; animation: none; color: #999; }
    
    #stop-button { background: linear-gradient(135deg, var(--peditx-red), var(--peditx-red-hover)); }
    #stop-button:hover { background: linear-gradient(135deg, var(--peditx-red-hover), #a03228); }

    .peditx-log-container { background-color: var(--peditx-dark-bg); color: var(--peditx-text-color); font-family: monospace; padding: 15px; border-radius: 8px; height: 350px; overflow-y: scroll; white-space: pre-wrap; border: 1px solid var(--peditx-border); margin-top: 10px; box-shadow: inset 0 0 5px rgba(0,0,0,0.2); }
    .peditx-status { padding: 15px; margin-top: 20px; background-color: var(--peditx-card-bg); border-radius: 8px; text-align: center; font-weight: bold; border: 1px solid var(--peditx-border); color: var(--peditx-orange); }
    .input-group { display: flex; flex-direction: column; gap: 10px; margin-top: 15px; }
    .cbi-input-text, .cbi-input-password, .cbi-input-select, textarea.cbi-input-text { background-color: var(--peditx-card-bg); border: 1px solid var(--peditx-border); color: var(--peditx-text-color); padding: 10px; border-radius: 5px; width: 100%; box-sizing: border-box; transition: border-color 0.3s, box-shadow 0.3s; }
    .cbi-input-text:focus, .cbi-input-password:focus, .cbi-input-select:focus, textarea.cbi-input-text:focus { outline: none; border-color: var(--peditx-orange); box-shadow: 0 0 0 3px rgba(255, 140, 0, 0.3); }
    .pkg-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); gap: 10px; margin-top: 15px; }
    .pkg-item { background: var(--peditx-card-bg); padding: 10px; border-radius: 8px; display: flex; align-items: center; border: 1px solid var(--peditx-border); transition: background 0.2s; }
    .pkg-item:hover { background: var(--peditx-hover-bg); }
    .sub-section { border: 1px solid var(--peditx-border); padding: 20px; border-radius: 8px; margin-top: 20px; }
    .log-controls { display: flex; justify-content: flex-end; align-items: center; margin-top: 20px; gap: 10px; }
    .log-controls .cbi-button { font-size: 12px; padding: 8px 15px; border-radius: 5px; background-color: var(--peditx-card-bg); color: var(--peditx-text-color); border: 1px solid var(--peditx-border); transition: background 0.2s, border-color 0.2s; cursor: pointer; }
    .log-controls .cbi-button:hover { background-color: var(--peditx-hover-bg); border-color: var(--peditx-orange); }
    #logout-button { background: linear-gradient(135deg, var(--peditx-pink), var(--peditx-pink-hover)); color: #1a1a1a; border-color: var(--peditx-pink); }
    #logout-button:hover { background: linear-gradient(135deg, var(--peditx-pink-hover), #f73ca8); border-color: var(--peditx-pink-hover); }
    .log-controls label { margin-right: 10px; cursor: pointer; user-select: none; }
    .log-controls input[type="checkbox"] { vertical-align: middle; margin-right: 5px; }
    .peditx-modal { display: none; position: fixed; z-index: 100; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.6); backdrop-filter: blur(5px); -webkit-backdrop-filter: blur(5px); }
    .peditx-modal-content { background-color: var(--peditx-card-bg); color: var(--peditx-text-color); margin: 15% auto; padding: 30px; border: 1px solid var(--peditx-border); width: 90%; max-width: 450px; border-radius: 12px; box-shadow: 0 8px 20px rgba(0,0,0,0.5); }
    .peditx-modal-buttons { display: flex; justify-content: flex-end; gap: 10px; margin-top: 20px; }
    .peditx-modal-buttons .cbi-button { padding: 10px 20px; border-radius: 20px; }
</style>

<div id="peditx-confirm-modal" class="peditx-modal">
    <div class="peditx-modal-content">
        <p id="peditx-modal-text"></p>
        <div class="peditx-modal-buttons">
            <button id="peditx-modal-yes" class="cbi-button cbi-button-apply">Yes</button>
            <button id="peditx-modal-no" class="cbi-button">No</button>
        </div>
    </div>
</div>

<div class="cbi-map">
    <h2>PeDitXOS Tools</h2>
    <div class="peditx-tabs">
        <button class="peditx-tab-link active" onclick="showTab(event, 'main-tools')">Main Tools</button>
        <button class="peditx-tab-link" onclick="showTab(event, 'dns-changer')">DNS Changer</button>
        <button class="peditx-tab-link" onclick="showTab(event, 'service-installer')">Service Installer</button>
        <button class="peditx-tab-link" onclick="showTab(event, 'commander')">Commander</button>
        <button class="peditx-tab-link" onclick="showTab(event, 'extra-tools')">Extra Tools</button>
        <button class="peditx-tab-link" onclick="showTab(event, 'x86-pi-opts')">x86/Pi Opts</button>
    </div>

    <div id="main-tools" class="peditx-tab-content" style="display:block;">
        <div class="action-grid">
            <div class="action-item"><input type="radio" name="peditx_action" id="action_install_pw1" value="install_pw1"><label for="action_install_pw1">Install Passwall 1</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_install_pw2" value="install_pw2"><label for="action_install_pw2">Install Passwall 2</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_install_both" value="install_both"><label for="action_install_both">Install Passwall 1 + 2</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_easy_exroot" value="easy_exroot"><label for="action_easy_exroot">Easy Exroot</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_uninstall_all" value="uninstall_all" data-confirm="This will remove all related packages and PeDitXOS Tools itself. Are you sure?"><label for="action_uninstall_all">Uninstall All Tools</label></div>
        </div>
    </div>
    <div id="dns-changer" class="peditx-tab-content">
        <div class="action-grid">
            <div class="action-item"><input type="radio" name="peditx_action" id="action_set_dns_shecan" value="set_dns_shecan"><label for="action_set_dns_shecan">Shecan</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_set_dns_electro" value="set_dns_electro"><label for="action_set_dns_electro">Electro</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_set_dns_cloudflare" value="set_dns_cloudflare"><label for="action_set_dns_cloudflare">Cloudflare</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_set_dns_google" value="set_dns_google"><label for="action_set_dns_google">Google</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_set_dns_begzar" value="set_dns_begzar"><label for="action_set_dns_begzar">Begzar</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_set_dns_radar" value="set_dns_radar"><label for="action_set_dns_radar">Radar</label></div>
        </div>
        <div class="action-item" style="margin-top: 15px;"><input type="radio" name="peditx_action" id="action_set_dns_custom" value="set_dns_custom"><label for="action_set_dns_custom">Custom DNS</label></div>
        <div class="input-group">
            <input class="cbi-input-text" type="text" id="custom_dns1" placeholder="Custom DNS 1">
            <input class="cbi-input-text" type="text" id="custom_dns2" placeholder="Custom DNS 2 (Optional)">
        </div>
    </div>
    <div id="service-installer" class="peditx-tab-content">
        <div class="action-grid">
            <div class="action-item"><input type="radio" name="peditx_action" id="action_install_torplus" value="install_torplus"><label for="action_install_torplus">Install TORPlus</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_install_sshplus" value="install_sshplus"><label for="action_install_sshplus">Install SSHPlus</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_install_aircast" value="install_aircast"><label for="action_install_aircast">Install Air-Cast</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_install_warp" value="install_warp"><label for="action_install_warp">Install Warp+</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_change_repo" value="change_repo"><label for="action_change_repo">Change to PeDitX Repo</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_install_wol" value="install_wol"><label for="action_install_wol">Install Wake On Lan</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_cleanup_memory" value="cleanup_memory"><label for="action_cleanup_memory">Cleanup Memory</label></div>
        </div>
    </div>
    <div id="commander" class="peditx-tab-content">
        <div class="sub-section">
            <h4>Welcome to the Commander!</h4>
            <p>This tab provides direct, root-level access to the system's command line.</p>
            <ul style="list-style-type: disc; padding-left: 20px; margin: 10px 0;">
                <li><b>Login:</b> Use your router's username (usually <code>root</code>) and password.</li>
                <li><b>Pasting Commands:</b> Use <code>Ctrl+Shift+V</code> (Windows/Linux) or <code>Cmd+V</code> (Mac) to paste commands. Right-clicking may also work depending on your browser.</li>
            </ul>
            <p style="color: var(--peditx-red);"><b>Warning:</b> Commands executed here can permanently alter your system configuration and cause instability. Proceed with caution.</p>
            <div id="ttyd-placeholder" style="text-align: center; padding: 20px; color: var(--peditx-orange);">Loading Terminal...</div>
            <iframe id="ttyd-iframe" style="width: 100%; height: 500px; border: 1px solid var(--peditx-border); border-radius: 8px; margin-top: 15px; display: none;">
            </iframe>
        </div>
    </div>
    <div id="extra-tools" class="peditx-tab-content">
        <div class="sub-section">
            <h4>WiFi Settings</h4>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_set_wifi_config" value="set_wifi_config"><label for="action_set_wifi_config">Apply WiFi Settings Below</label></div>
            <div class="input-group">
                <input class="cbi-input-text" type="text" id="wifi_ssid" placeholder="WiFi Name (SSID)">
                <input class="cbi-input-password" type="password" id="wifi_key" placeholder="WiFi Password">
                <div style="display: flex; gap: 20px; margin-top: 5px;">
                    <label><input type="checkbox" id="wifi_band_2g" checked> Enable 2.4GHz</label>
                    <label><input type="checkbox" id="wifi_band_5g" checked> Enable 5GHz</label>
                </div>
            </div>
        </div>
        <div class="sub-section">
            <h4>LAN IP Changer</h4>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_set_lan_ip" value="set_lan_ip"><label for="action_set_lan_ip">Set LAN IP Address Below</label></div>
            <div class="input-group">
                <select id="lan_ip_preset" class="cbi-input-select" onchange="document.getElementById('custom_lan_ip').value = this.value">
                    <option value="10.1.1.1">Default (10.1.1.1)</option>
                    <option value="192.168.1.1">192.168.1.1</option>
                    <option value="11.1.1.1">11.1.1.1</option>
                    <option value="192.168.0.1">192.168.0.1</option>
                    <option value="">Custom</option>
                </select>
                <input class="cbi-input-text" type="text" id="custom_lan_ip" placeholder="Custom LAN IP">
            </div>
        </div>
        <div class="sub-section">
            <h4>Extra Package Installer</h4>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_install_extra_packages" value="install_extra_packages"><label for="action_install_extra_packages">Install Selected Packages Below</label></div>
            <div class="log-controls">
                <button class="cbi-button cbi-button-action" onclick="startActionByName('opkg_update')">Update Package Lists</button>
            </div>
            <div class="pkg-grid">
                <div class="pkg-item"><input type="checkbox" name="extra_pkg" id="pkg_sing-box" value="sing-box"><label for="pkg_sing-box">Sing-Box</label></div>
                <div class="pkg-item"><input type="checkbox" name="extra_pkg" id="pkg_haproxy" value="haproxy"><label for="pkg_haproxy">HAProxy</label></div>
                <div class="pkg-item"><input type="checkbox" name="extra_pkg" id="pkg_v2ray-core" value="v2ray-core"><label for="pkg_v2ray-core">V2Ray Core</label></div>
                <div class="pkg-item"><input type="checkbox" name="extra_pkg" id="pkg_luci-app-v2raya" value="luci-app-v2raya"><label for="pkg_luci-app-v2raya">V2RayA App</label></div>
                <div class="pkg-item"><input type="checkbox" name="extra_pkg" id="pkg_luci-app-openvpn" value="luci-app-openvpn"><label for="pkg_luci-app-openvpn">OpenVPN App</label></div>
                <div class="pkg-item"><input type="checkbox" name="extra_pkg" id="pkg_softethervpn5-client" value="softethervpn5-client"><label for="pkg_softethervpn5-client">SoftEther Client</label></div>
                <div class="pkg-item"><input type="checkbox" name="extra_pkg" id="pkg_luci-app-wol" value="luci-app-wol"><label for="pkg_luci-app-wol">Wake-on-LAN App</label></div>
                <div class="pkg-item"><input type="checkbox" name="extra_pkg" id="pkg_luci-app-smartdns" value="luci-app-smartdns"><label for="pkg_luci-app-smartdns">SmartDNS App</label></div>
                <div class="pkg-item"><input type="checkbox" name="extra_pkg" id="pkg_hysteria" value="hysteria"><label for="pkg_hysteria">Hysteria</label></div>
                <div class="pkg-item"><input type="checkbox" name="extra_pkg" id="pkg_btop" value="btop"><label for="pkg_btop">btop</label></div>
            </div>
        </div>
    </div>
    <div id="x86-pi-opts" class="peditx-tab-content">
        <div class="action-grid">
            <div class="action-item"><input type="radio" name="peditx_action" id="action_get_system_info" value="get_system_info"><label for="action_get_system_info">Get System Info</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_install_opt_packages" value="install_opt_packages"><label for="action_install_opt_packages">Install Opt Packages</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_apply_cpu_opts" value="apply_cpu_opts"><label for="action_apply_cpu_opts">Apply CPU Opts</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_apply_mem_opts" value="apply_mem_opts"><label for="action_apply_mem_opts">Apply Memory Opts</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_apply_net_opts" value="apply_net_opts"><label for="action_apply_net_opts">Apply Network Opts</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_apply_usb_opts" value="apply_usb_opts"><label for="action_apply_usb_opts">Apply USB Opts</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_enable_luci_wan" value="enable_luci_wan" data-confirm="SECURITY WARNING: This will expose your router's web interface to the Internet! Continue?"><label for="action_enable_luci_wan">Enable LuCI on WAN</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_expand_root" value="expand_root" data-confirm="CRITICAL WARNING: This will WIPE ALL DATA on your storage device! Are you absolutely sure?"><label for="action_expand_root">Expand Root Partition</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_restore_opt_backup" value="restore_opt_backup"><label for="action_restore_opt_backup">Restore Config Backup</label></div>
            <div class="action-item"><input type="radio" name="peditx_action" id="action_reboot_system" value="reboot_system" data-confirm="Reboot the system now?"><label for="action_reboot_system">Reboot System</button></div>
        </div>
    </div>

    <div class="execute-bar">
        <button id="execute-button" class="peditx-main-button">Start</button>
        <button id="stop-button" class="peditx-main-button" style="display:none;">Stop</button>
    </div>

    <div id="peditx-status" class="peditx-status">Ready. Select an action and press Start.</div>
    <div class="log-controls">
		<label for="auto-refresh-toggle"><input type="checkbox" id="auto-refresh-toggle" checked> Auto Refresh</label>
        <button class="cbi-button" onclick="pollStatus(true)">Refresh Log</button>
        <button class="cbi-button" onclick="clearLog()">Clear Log</button>
        <button id="logout-button" class="cbi-button">Logout</button>
    </div>
    <pre id="log-output" class="peditx-log-container">Welcome to PeDitXOS Tools!</pre>
</div>
<script type="text/javascript">
    var modalCallback;
    var isPolling = false;
    var modal = document.getElementById('peditx-confirm-modal');
    var modalText = document.getElementById('peditx-modal-text');
    var modalYes = document.getElementById('peditx-modal-yes');
    var modalNo = document.getElementById('peditx-modal-no');
    var startButton = document.getElementById('execute-button');
    var stopButton = document.getElementById('stop-button');
    var statusDiv = document.getElementById('peditx-status');
    var logOutput = document.getElementById('log-output');
    var autoRefreshToggle = document.getElementById('auto-refresh-toggle');
    var statusURL = '<%=luci.dispatcher.build_url("admin", "peditxos", "status")%>';
    var runURL = '<%=luci.dispatcher.build_url("admin", "peditxos", "run")%>';
    
    var ttydInfoURL = '<%=luci.dispatcher.build_url("admin", "peditxos", "get_ttyd_info")%>';
    var ttydIframe = document.getElementById('ttyd-iframe');
    var ttydPlaceholder = document.getElementById('ttyd-placeholder');
    var ttydLoaded = false;

    function showTab(evt, tabName) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("peditx-tab-content");
        for (i = 0; i < tabcontent.length; i++) { tabcontent[i].style.display = "none"; }
        tablinks = document.getElementsByClassName("peditx-tab-link");
        for (i = 0; i < tablinks.length; i++) { tablinks[i].className = tablinks[i].className.replace(" active", ""); }
        document.getElementById(tabName).style.display = "block";
        evt.currentTarget.className += " active";
        
        if (tabName === 'commander' && !ttydLoaded) {
            loadTtydTerminal();
        }
    }
    
    function loadTtydTerminal() {
        XHR.get(ttydInfoURL, null, function(x, data) {
            if (x && x.status === 200 && data) {
                var protocol = data.ssl ? 'https://' : 'http://';
                var ttydUrl = protocol + window.location.hostname + ':' + data.port;
                ttydIframe.src = ttydUrl;
                ttydPlaceholder.style.display = 'none';
                ttydIframe.style.display = 'block';
                ttydLoaded = true;
            } else {
                ttydPlaceholder.innerText = 'Error: Could not load TTYD configuration. Please ensure luci-app-ttyd is installed and configured.';
            }
        });
    }

    function showConfirmModal(message, callback) {
        modalText.innerText = message;
        modal.style.display = 'block';
        modalCallback = callback;
    }

    modalYes.onclick = function() {
        modal.style.display = 'none';
        if (modalCallback) modalCallback(true);
    };

    modalNo.onclick = function() {
        modal.style.display = 'none';
        if (modalCallback) modalCallback(false);
    };

    function pollStatus(force) {
        if (isPolling && !force) return;

        XHR.poll(2, statusURL, null, function(x, data) {
            if (!x || x.status !== 200 || !data) {
                XHR.poll.stop();
                isPolling = false;
                return;
            }

            if (logOutput.textContent !== data.log) {
                logOutput.textContent = data.log;
                logOutput.scrollTop = logOutput.scrollHeight;
            }
            
            if (data.running) {
                isPolling = true;
                startButton.disabled = true;
                startButton.style.display = 'none';
                stopButton.style.display = 'inline-flex';
            } else {
                if (!autoRefreshToggle.checked) {
                    XHR.poll.stop();
                }
                isPolling = false;
                startButton.disabled = false;
                startButton.style.display = 'inline-flex';
                stopButton.style.display = 'none';
            }
        });
    }
    
    function clearLog() {
        XHR.get(runURL, { action: 'clear_log' }, function(x, data) {
            if (x && x.status === 200) {
                pollStatus(true);
            }
        });
    }

    function startActionByName(actionName, params) {
        params = params || {};
        params.action = actionName;

        XHR.get(runURL, params, function(x, data) {
            if (x && x.status === 200 && data.success) {
                statusDiv.innerText = 'Starting ' + actionName + '...';
                pollStatus(true);
            } else {
                statusDiv.innerText = 'Error starting action: ' + (data ? data.error : 'Unknown');
            }
        });
    }

    startButton.addEventListener('click', function() {
        var selectedActionInput = document.querySelector('input[name="peditx_action"]:checked');
        if (!selectedActionInput) {
            showConfirmModal('Please select an action first.', function(result) {});
            return;
        }

        var action = selectedActionInput.value;
        var confirmationMessage = selectedActionInput.getAttribute('data-confirm');
        
        var doStart = function() {
            var params = {};
            if (action === 'set_dns_custom') {
                var dns1 = document.getElementById('custom_dns1').value.trim();
                if (!dns1) {
                    showConfirmModal('Please enter at least the first DNS IP.', function(result) {});
                    return;
                }
                params.dns1 = dns1;
                params.dns2 = document.getElementById('custom_dns2').value.trim();
            } else if (action === 'install_extra_packages' || action === 'install_opt_packages') {
                var selectedPkgs = Array.from(document.querySelectorAll('input[name="extra_pkg"]:checked')).map(cb => cb.value);
                if (selectedPkgs.length === 0 && action === 'install_extra_packages') {
                    showConfirmModal('Please select at least one extra package to install.', function(result) {});
                    return;
                }
                params.packages = selectedPkgs.join(' ');
            } else if (action === 'set_wifi_config') {
                params.ssid = document.getElementById('wifi_ssid').value.trim();
                params.key = document.getElementById('wifi_key').value;
                var band2g = document.getElementById('wifi_band_2g').checked;
                var band5g = document.getElementById('wifi_band_5g').checked;
                if (!params.ssid || !params.key) {
                    showConfirmModal('Please enter WiFi SSID and Password.', function(result) {});
                    return;
                }
                if (!band2g && !band5g) {
                    showConfirmModal('Please select at least one WiFi band to enable.', function(result) {});
                    return;
                }
                params.band = (band2g && band5g) ? 'Both' : (band2g ? '2G' : '5G');
            } else if (action === 'set_lan_ip') {
				var presetIp = document.getElementById('lan_ip_preset').value;
				var customIp = document.getElementById('custom_lan_ip').value.trim();
				var finalIp = (presetIp !== "") ? presetIp : customIp;

				if (!finalIp) {
					showConfirmModal('Please select a preset or enter a custom LAN IP address.', function(result) {});
					return;
				}
				params.ipaddr = finalIp.replace(/\s/g, '');
            }
            startActionByName(action, params);
        };

        if (confirmationMessage) {
            showConfirmModal(confirmationMessage, function(result) {
                if (result) {
                    doStart();
                }
            });
        } else {
            doStart();
        }
    });

    stopButton.addEventListener('click', function() {
        statusDiv.innerText = 'Stopping process...';
        XHR.get(runURL, { action: 'stop_process' }, function(x, data) {
            if (x && x.status === 200 && data.success) {
                pollStatus(true);
            } else {
                statusDiv.innerText = 'Error stopping process.';
            }
        });
    });

    autoRefreshToggle.addEventListener('change', function() {
		if (this.checked) {
            statusDiv.innerText = 'Auto-refresh enabled.';
			pollStatus(true);
		} else {
            statusDiv.innerText = 'Auto-refresh disabled.';
			XHR.poll.stop();
		}
	});

    document.getElementById('logout-button').addEventListener('click', function() {
        window.location.href = '<%=luci.dispatcher.build_url("admin", "logout")%>';
    });

	document.getElementById('custom_lan_ip').value = document.getElementById('lan_ip_preset').value;
    pollStatus(true);
</script>
<%+footer%>
