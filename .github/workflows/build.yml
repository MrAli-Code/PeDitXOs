name: Build Custom Live ISO

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      - name: Build ISO in Docker container
        run: |
          docker run --rm -v $(pwd):/workspace -w /workspace ubuntu:20.04 bash -c "
            apt-get update &&
            apt-get install -y squashfs-tools xorriso curl dialog parted coreutils nano unzip gzip openssh-server &&
            # Create working directory
            mkdir -p /workspace/live-iso &&
            # Download Ubuntu minimal ISO
            curl -L -o /workspace/ubuntu.iso https://releases.ubuntu.com/20.04/ubuntu-20.04.3-live-server-amd64.iso &&
            # Mount the base ISO (in Docker, this is a virtualized filesystem)
            mkdir -p /workspace/mnt &&
            mount -o loop /workspace/ubuntu.iso /workspace/mnt &&
            # Copy the content to the working directory
            cp -a /workspace/mnt/. /workspace/live-iso/ &&
            # Install necessary tools
            mkdir -p /workspace/live-iso/usr/bin &&
            cp /usr/bin/resize2fs /workspace/live-iso/usr/bin/ &&
            cp /usr/bin/gzip /workspace/live-iso/usr/bin/ &&
            cp /usr/bin/unzip /workspace/live-iso/usr/bin/ &&
            cp /usr/bin/curl /workspace/live-iso/usr/bin/ &&
            cp /usr/bin/wget /workspace/live-iso/usr/bin/ &&
            cp /usr/bin/nano /workspace/live-iso/usr/bin/ &&
            cp /usr/bin/parted /workspace/live-iso/usr/bin/ &&
            # Install OpenSSH Server
            mkdir -p /workspace/live-iso/etc/ssh &&
            cp /etc/ssh/sshd_config /workspace/live-iso/etc/ssh/ &&
            mkdir -p /workspace/live-iso/etc/init.d &&
            echo -e '#!/bin/bash\nservice ssh start' > /workspace/live-iso/etc/init.d/start_ssh &&
            chmod +x /workspace/live-iso/etc/init.d/start_ssh &&
            # Enable SSH service to start on boot
            chroot /workspace/live-iso update-rc.d start_ssh defaults &&
            # Create the live ISO
            xorriso -as mkisofs -o /workspace/PeDitXOS.iso -r -J -V "PeDitXOS" /workspace/live-iso
          "

      - name: Upload PeDitXOS ISO to GitHub Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: PeDitXOS
          path: PeDitXOS.iso
